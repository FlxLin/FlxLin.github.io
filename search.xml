<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>cocos2d-creator</title>
    <url>/2020/01/21/2020-01-21-cocos2d-creator/</url>
    <content><![CDATA[<p><em>这是我近期学习cocos2d_creator的收获，主要是关于js脚本编写。</em></p>
<h2 id="场景切换"><a href="#场景切换" class="headerlink" title="场景切换"></a>场景切换</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">cc.Class(&#123;</span><br><span class="line">    extends: cc.Component,</span><br><span class="line"></span><br><span class="line">    properties: &#123;</span><br><span class="line">        <span class="comment">// foo: &#123;</span></span><br><span class="line">        <span class="comment">//     // ATTRIBUTES:</span></span><br><span class="line">        <span class="comment">//     default: null,        // The default value will be used only when the component attaching</span></span><br><span class="line">        <span class="comment">//                           // to a node for the first time</span></span><br><span class="line">        <span class="comment">//     type: cc.SpriteFrame, // optional, default is typeof default</span></span><br><span class="line">        <span class="comment">//     serializable: true,   // optional, default is true</span></span><br><span class="line">        <span class="comment">// &#125;,</span></span><br><span class="line">        <span class="comment">// bar: &#123;</span></span><br><span class="line">        <span class="comment">//     get () &#123;</span></span><br><span class="line">        <span class="comment">//         return this._bar;</span></span><br><span class="line">        <span class="comment">//     &#125;,</span></span><br><span class="line">        <span class="comment">//     set (value) &#123;</span></span><br><span class="line">        <span class="comment">//         this._bar = value;</span></span><br><span class="line">        <span class="comment">//     &#125;</span></span><br><span class="line">        <span class="comment">// &#125;,</span></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// LIFE-CYCLE CALLBACKS:</span></span><br><span class="line"></span><br><span class="line">    onLoad () &#123;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">scenesChangesMS</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">            cc.director.loadScene(<span class="string">"main_scenes"</span>);<span class="comment">//场景切换函数</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">this</span>.node.on(cc.Node.EventType.TOUCH_END,scenesChangesMS,<span class="keyword">this</span>);<span class="comment">//打开触摸事件监控,on方法会给my_func方法传递一个TONCH类型的参数</span></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    start () &#123;</span><br><span class="line"></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// update (dt) &#123;&#125;,</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h2 id="触摸事件监控"><a href="#触摸事件监控" class="headerlink" title="触摸事件监控"></a>触摸事件监控</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">cc.Class(&#123;</span><br><span class="line">    extends: cc.Component,</span><br><span class="line"></span><br><span class="line">    properties: &#123;</span><br><span class="line">        <span class="comment">// foo: &#123;</span></span><br><span class="line">        <span class="comment">//     // ATTRIBUTES:</span></span><br><span class="line">        <span class="comment">//     default: null,        // The default value will be used only when the component attaching</span></span><br><span class="line">        <span class="comment">//                           // to a node for the first time</span></span><br><span class="line">        <span class="comment">//     type: cc.SpriteFrame, // optional, default is typeof default</span></span><br><span class="line">        <span class="comment">//     serializable: true,   // optional, default is true</span></span><br><span class="line">        <span class="comment">// &#125;,</span></span><br><span class="line">        <span class="comment">// bar: &#123;</span></span><br><span class="line">        <span class="comment">//     get () &#123;</span></span><br><span class="line">        <span class="comment">//         return this._bar;</span></span><br><span class="line">        <span class="comment">//     &#125;,</span></span><br><span class="line">        <span class="comment">//     set (value) &#123;</span></span><br><span class="line">        <span class="comment">//         this._bar = value;</span></span><br><span class="line">        <span class="comment">//     &#125;</span></span><br><span class="line">        <span class="comment">// &#125;,</span></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// LIFE-CYCLE CALLBACKS:</span></span><br><span class="line"></span><br><span class="line">    onLoad () &#123;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">my_func1</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"触摸开始！！！"</span>);</span><br><span class="line">            <span class="built_in">console</span>.log(t.getLocation());</span><br><span class="line">            <span class="comment">//this.node.off(cc.Node.EventType.TOUCH_START,my_func,this);//关闭触摸事件监控</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">my_func2</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"触摸移动！！！"</span>);</span><br><span class="line">            <span class="built_in">console</span>.log(t.getLocation());</span><br><span class="line">            <span class="keyword">this</span>.node.x += t.getDelta().x;</span><br><span class="line">            <span class="keyword">this</span>.node.y += t.getDelta().y;</span><br><span class="line">            <span class="comment">//t.stopPropagationImmediate();</span></span><br><span class="line">            <span class="comment">//this.node.off(cc.Node.EventType.TOUCH_START,my_func,this);//关闭触摸事件监控</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">this</span>.node.on(cc.Node.EventType.TOUCH_START,my_func1,<span class="keyword">this</span>);<span class="comment">//打开触摸事件监控,on方法会给my_func方法传递一个TONCH类型的参数</span></span><br><span class="line">        <span class="keyword">this</span>.node.on(cc.Node.EventType.TOUCH_MOVE,my_func2,<span class="keyword">this</span>);<span class="comment">//打开触摸移动事件监控</span></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    start () &#123;</span><br><span class="line"></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// update (dt) &#123;&#125;,</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h2 id="键盘事件监控"><a href="#键盘事件监控" class="headerlink" title="键盘事件监控"></a>键盘事件监控</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">cc.Class(&#123;</span><br><span class="line">    extends: cc.Component,</span><br><span class="line"></span><br><span class="line">    properties: &#123;</span><br><span class="line">        <span class="comment">// foo: &#123;</span></span><br><span class="line">        <span class="comment">//     // ATTRIBUTES:</span></span><br><span class="line">        <span class="comment">//     default: null,        // The default value will be used only when the component attaching</span></span><br><span class="line">        <span class="comment">//                           // to a node for the first time</span></span><br><span class="line">        <span class="comment">//     type: cc.SpriteFrame, // optional, default is typeof default</span></span><br><span class="line">        <span class="comment">//     serializable: true,   // optional, default is true</span></span><br><span class="line">        <span class="comment">// &#125;,</span></span><br><span class="line">        <span class="comment">// bar: &#123;</span></span><br><span class="line">        <span class="comment">//     get () &#123;</span></span><br><span class="line">        <span class="comment">//         return this._bar;</span></span><br><span class="line">        <span class="comment">//     &#125;,</span></span><br><span class="line">        <span class="comment">//     set (value) &#123;</span></span><br><span class="line">        <span class="comment">//         this._bar = value;</span></span><br><span class="line">        <span class="comment">//     &#125;</span></span><br><span class="line">        <span class="comment">// &#125;,</span></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// LIFE-CYCLE CALLBACKS:</span></span><br><span class="line"></span><br><span class="line">    onLoad () &#123;</span><br><span class="line">        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN,my_KEY_DOWN,<span class="keyword">this</span>);</span><br><span class="line">        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP,my_KEY_UP,<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.node.on(<span class="string">"user_page"</span>,my_page,<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">my_page</span>(<span class="params">e</span>) </span>&#123;<span class="comment">//e为派送函数传递过来的 表形参</span></span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"自定义事件触发"</span>);</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="keyword">this</span>.node.name);</span><br><span class="line">            <span class="built_in">console</span>.log(e.detail);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">my_KEY_DOWN</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">switch</span>(event.keyCode)&#123;</span><br><span class="line">                <span class="keyword">case</span> cc.KEY.space :</span><br><span class="line">                    <span class="built_in">console</span>.log(<span class="string">"space"</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> cc.KEY.w :</span><br><span class="line">                    <span class="built_in">console</span>.log(<span class="string">"w"</span>);</span><br><span class="line">                    <span class="keyword">this</span>.node.y += <span class="number">10</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> cc.KEY.s :</span><br><span class="line">                    <span class="built_in">console</span>.log(<span class="string">"s"</span>);</span><br><span class="line">                    <span class="keyword">this</span>.node.y -= <span class="number">10</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">my_KEY_UP</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">switch</span>(event.keyCode)&#123;</span><br><span class="line">                <span class="keyword">case</span> cc.KEY.space :</span><br><span class="line">                    <span class="comment">//this.node.emit("user_page",&#123;name : "张三" , sex : "男" &#125;);</span></span><br><span class="line">                    <span class="keyword">var</span> e = <span class="keyword">new</span> cc.Event.EventCustom(<span class="string">"user_page"</span>);</span><br><span class="line">                    e.detail = &#123;<span class="attr">name</span> : <span class="string">"张三"</span> , <span class="attr">sex</span> : <span class="string">"男"</span>&#125;;</span><br><span class="line">                    <span class="keyword">this</span>.node.dispatchEvent(e,<span class="literal">false</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> cc.KEY.w :</span><br><span class="line">                    <span class="comment">//this.node.emit("user_page",&#123;name : "李四" , sex : "男"&#125;);</span></span><br><span class="line">                    <span class="keyword">var</span> e = <span class="keyword">new</span> cc.Event.EventCustom(<span class="string">"user_page"</span>);</span><br><span class="line">                    e.detail = &#123;<span class="attr">name</span> : <span class="string">"李四"</span> , <span class="attr">sex</span> : <span class="string">"男"</span>&#125;;</span><br><span class="line">                    <span class="keyword">this</span>.node.dispatchEvent(e,<span class="literal">true</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> cc.KEY.s :</span><br><span class="line">                    <span class="keyword">this</span>.node.emit(<span class="string">"user_page"</span>,&#123;<span class="attr">name</span> : <span class="string">"王五"</span> , <span class="attr">sex</span> : <span class="string">"男"</span>&#125;);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    start () &#123;</span><br><span class="line"></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// update (dt) &#123;&#125;,</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>js , cocos2d-creator</tag>
      </tags>
  </entry>
</search>
